{"version":3,"sources":["api/Api.js","App.js","custom-element/et-app.js"],"names":["strapiEndPoint","process","EntKcToken","getTemplates","templateIds","a","axios","get","templateData","data","filtered","filter","temp","indexOf","id","getContents","contentName","contentIds","length","console","error","apiendpoints","map","el","all","endpoint","addAuthorizationRequestConfig","item","getDefaultOptions","defaultBearer","token","window","entando","keycloak","authenticated","localStorage","getItem","log","headers","Authorization","config","defaultOptions","velocityjs","require","App","contentIdsAndTemplateIds","useState","htmlCode","setHtmlCode","decodeURI","CID_TID","useEffect","cid_tid_obj","JSON","parse","templateId","getTemplateData","contentId","getContentsData","Object","keys","finalTemplate","contentIdAndTemplateId","filterContent","content","filterTemplate","template","render","contentShape","dangerouslySetInnerHTML","__html","ATTRIBUTES","WidgetElement","name","oldValue","newValue","values","includes","Error","this","mountPoint","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"8TAEMA,EAAc,UAAMC,4BAEpBC,GADW,UAAMD,+BAAN,uBACE,cAqBNE,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACaC,IAAMC,IAAN,UAAaN,+BAAb,eADb,uBACVO,EADU,EAChBC,KAEFC,EAAWF,EAAaG,QAAO,SAAAC,GACjC,OAAOR,EAAYS,QAAQD,EAAKE,GAAK,KAAO,KAJxB,kBAMjBJ,GANiB,2CAAH,sDA6BZK,EAAW,uCAAG,WAAOC,EAAaC,GAApB,iBAAAZ,EAAA,6DAClBW,GAAgBC,EAAWC,QAAQC,QAAQC,MAAMJ,GAChDK,EAAeJ,EAAWK,KAAI,SAAAC,GAAE,gBAAOvB,EAAP,kDAA+DgB,EAA/D,YAA8EA,EAA9E,YAA6FO,MAF5G,SAGJjB,IAAMkB,IAAIH,EAAaC,KAAI,SAACG,GAAD,OAAcnB,IAAMC,IAAIkB,EAAUC,EAA8B,GAAIxB,QAH3F,cAGjBO,EAHiB,yBAIhBA,EAAKa,KAAI,SAACK,GACb,OAAOA,EAAKlB,SALO,2CAAH,wDA6BlBmB,EAAoB,SAACC,GACvB,IAAMC,EARFC,QAAUA,OAAOC,SAAWD,OAAOC,QAAQC,UAAYF,OAAOC,QAAQC,SAASC,cACxEH,OAAOC,QAAQC,SAASH,MAExBK,aAAaC,QAAQ,SAOhC,OADAjB,QAAQkB,IAAI,YAAYP,GACnBA,EAaE,CACHQ,QAAS,CACLC,cAAc,GAAD,OAAKV,EAAL,YAAsBC,KAbnCD,IAAkB3B,EACX,CACHoC,QAAS,CACLC,cAAc,UAAD,OAAY,+IAI1B,IAYNb,EAAgC,WAA4C,IAA3Cc,EAA0C,uDAAjC,GAAIX,EAA6B,uDAAb,SACnEY,EAAiBb,EAAkBC,GACvC,OAAO,2BACAW,GACAC,I,eC7GPC,EAAaC,EAAQ,IA+CVC,MA1Cf,YAAyD,IAA1C5B,EAAyC,EAAzCA,YAAa6B,EAA4B,EAA5BA,yBAExB7B,EAAcA,GAA4B,SAC1C6B,EAA2BA,GAAsD,8JAEjF,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA+BF,mBAASG,UAAUJ,IAAlD,mBAAOK,EAAP,KAuBA,OAvBA,KAEAC,oBAAS,sBAAC,kCAAA9C,EAAA,6DACA+C,EAAcF,EAAQhC,QAAUmC,KAAKC,MAAMJ,GACjD/B,QAAQkB,IAAI,cAAee,GAFrB,SAIwBjD,EAAaiD,EAAY9B,KAAI,SAAAC,GAAE,OAAIA,EAAGgC,eAJ9D,cAIAC,EAJA,gBAKwBzC,EAAYC,EAAaoC,EAAY9B,KAAI,SAAAC,GAAE,OAAIA,EAAGkC,cAL1E,OAKAC,EALA,OAMNvC,QAAQkB,IAAI,kBAAmBqB,GAC3BF,GAAmBE,GAAmBC,OAAOC,KAAKR,GAAalC,SACzD2C,EAAgBT,EAAY9B,KAAI,SAAAwC,GAClC,IAAMC,EAAgBL,EAAgB/C,QAAO,SAAAqD,GAAO,OAAIA,EAAQlD,KAAOgD,EAAuBL,aACxFQ,EAAiBT,EAAgB7C,QAAO,SAAAuD,GAAQ,OAAKA,EAASpD,MAAQgD,EAAuBP,cACnG,OAAIU,EAAe/C,OAERwB,EAAWyB,OAAOF,EAAe,GAAGG,aAAc,CAACJ,QAASD,EAAc,KAE9E,MAEXf,EAAYa,IAjBV,4CAmBP,IACH1C,QAAQkB,IAAI,kCAAkCQ,GAE1C,mCAEQE,EACI,qBAAKsB,wBAAyB,CAC1BC,OAAQvB,KAEH,+CCvCvBwB,EAAa,CACfvD,YAAa,cACb6B,yBAA0B,4BAGxB2B,E,8KAMF,SAAyBC,EAAMC,EAAUC,GACrC,IAAKhB,OAAOiB,OAAOL,GAAYM,SAASJ,GACpC,MAAM,IAAIK,MAAJ,uCAA0CL,IAEhDM,KAAKC,YAAcL,IAAaD,GAChCK,KAAKZ,W,+BAIb,WACIY,KAAKC,WAAaC,SAASC,cAAc,OACzCH,KAAKI,YAAYJ,KAAKC,YACtBD,KAAKZ,W,oBAGT,WACI,IAAMnD,EAAc+D,KAAKK,aAAab,EAAWvD,aAC3C6B,EAA2BkC,KAAKK,aAAab,EAAW1B,0BAC9D1B,QAAQkB,IAAI,kBAAmBrB,EAAa,+BAAgC6B,GAC5EwC,IAASlB,OACL,cAAC,EAAD,CAAKnD,YAAaA,EAAa6B,yBAA0BA,IACzDkC,KAAKC,e,+BAzBb,WACI,OAAOrB,OAAOiB,OAAOL,O,eAHDe,cAgC5BC,eAAeC,OAAO,iBAAkBhB,K","file":"static/js/main.2b5c8c16.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst strapiEndPoint = `${process.env.REACT_APP_STRAPI_API_URL}`;\nconst apiEndPoint = `${process.env.REACT_APP_PUBLIC_API_URL}/template/searchby/`;\nconst EntKcToken = 'EntKcToken';\n\nexport const getTemplate = async (searchby = 'code', searchTerm) => {\n    return await axios.get(`${apiEndPoint}${searchby}/${searchTerm}`)\n}\n\n/**\n * getTemplateById Search Template By Id.\n * @param {*} templateId : TemplateId.\n * @returns \n */\nexport const getTemplateById = async (templateId) => {\n    const { data } = await axios.get(`${process.env.REACT_APP_PUBLIC_API_URL}/template/${templateId}`);\n    return data;\n}\n\n/**\n * getTemplate Get all templates.\n * @param {*} templateId : TemplateId.\n * @returns\n */\nexport const getTemplates = async (templateIds) => {\n    const { data: templateData } = await axios.get(`${process.env.REACT_APP_PUBLIC_API_URL}/template/`);\n\n    const filtered = templateData.filter(temp => {\n        return templateIds.indexOf(temp.id + \"\") > -1\n    });\n    return filtered\n}\n\n/**\n * getContentById Search Content By Id.\n * @param {*} contentType\n * @param {*} contentId\n * @returns\n */\n export const getContentById = async (contentName, contentId) => {\n    if (!contentName || !contentId) console.error(contentName, contentId);\n    const url = `${strapiEndPoint}/content-manager/collection-types/api::${contentName}.${contentName}/${contentId}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, EntKcToken))\n\n    return data;\n}\n\n/**\n * getContents get all contents.\n * @param {*} contentType\n * @param {*} contentId\n * @returns\n */\nexport const getContents = async (contentName, contentIds) => {\n    if (!contentName && !contentIds.length) console.error(contentName);\n    const apiendpoints = contentIds.map(el => `${strapiEndPoint}/content-manager/collection-types/api::${contentName}.${contentName}/${el}`);\n    const data = await axios.all(apiendpoints.map((endpoint) => axios.get(endpoint, addAuthorizationRequestConfig({}, EntKcToken))));\n    return data.map((item) => {\n        return item.data;\n    });\n}\n// export const getContents = async (contentName, contentIds) => {\n//     if (!contentName) console.error(contentName);\n//     console.log(\"XSXS\",contentIds);\n//     const url = `${strapiEndPoint}/content-manager/collection-types/api::${contentName}.${contentName}`\n//     const { data: { results } } = await axios.get(url, addAuthorizationRequestConfig({}, EntKcToken))\n\n//     return results.filter(el2 => {\n//         return contentIds.indexOf(el2.id) > -1\n//     });\n// }\n\n\nconst getKeycloakToken = () => {\n    // return '';\n    if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n        return window.entando.keycloak.token\n    } else {\n        return localStorage.getItem('token');\n    }\n}\n\nconst getDefaultOptions = (defaultBearer) => {\n    const token = getKeycloakToken()\n    console.log('ET-Widget',token);\n    if (!token) {\n        //Below if condition is to run the strapi API in local\n        if (defaultBearer === EntKcToken) {\n            return {\n                headers: {\n                    Authorization: `Bearer ${'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjUyMzY5ODE4LCJleHAiOjE2NTQ5NjE4MTh9.Qwx9gGH33AzgIzSw12xGFy7pyWeHliGAl7-Bgt23Vg0'}`\n                },\n            }\n        } else {\n            return {}\n        }\n    }\n    // logic to add token for both strapi and MS api\n    return {\n        headers: {\n            Authorization: `${defaultBearer} ${token}`,\n        },\n    }\n}\n\n// Get authorization tokens\nexport const addAuthorizationRequestConfig = (config = {}, defaultBearer = 'Bearer') => {\n    let defaultOptions = getDefaultOptions(defaultBearer);\n    return {\n        ...config,\n        ...defaultOptions\n    }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { getContentById, getContents, getTemplateById, getTemplates } from './api/Api';\nvar velocityjs = require(\"velocityjs\");\nimport './app.css';\n\nconst domain = process.env.REACT_APP_STRAPI_API_URL;\n\nfunction App({ contentName, contentIdsAndTemplateIds }) {\n    // TODO: TESTING PURPOSE\n    contentName = contentName ? contentName : 'banner';\n    contentIdsAndTemplateIds = contentIdsAndTemplateIds ? contentIdsAndTemplateIds : '%5B%7B%22templateId%22:%2250%22,%22contentId%22:5%7D,%7B%22templateId%22:%2248%22,%22contentId%22:3%7D,%7B%22templateId%22:%2248%22,%22contentId%22:2%7D%5D';\n    \n    const [htmlCode, setHtmlCode] = useState(null);\n    const [CID_TID, set_CID_TID] = useState(decodeURI(contentIdsAndTemplateIds));\n\n    useEffect(async () => {\n        const cid_tid_obj = CID_TID.length && JSON.parse(CID_TID);\n        console.log('cid_tid_obj', cid_tid_obj);\n        // templateId: '48', contentId:\n        const getTemplateData = await getTemplates(cid_tid_obj.map(el => el.templateId));\n        const getContentsData = await getContents(contentName, cid_tid_obj.map(el => el.contentId));\n        console.log('getContentsData', getContentsData);\n        if (getTemplateData && getContentsData && Object.keys(cid_tid_obj).length) {\n            const finalTemplate = cid_tid_obj.map(contentIdAndTemplateId => {\n                const filterContent = getContentsData.filter(content => content.id === contentIdAndTemplateId.contentId);\n                const filterTemplate = getTemplateData.filter(template => +template.id === +contentIdAndTemplateId.templateId)\n                if (filterTemplate.length) {\n                    // return velocityjs.render(filterTemplate[0].contentShape, filterContent[0])\n                    return velocityjs.render(filterTemplate[0].contentShape, {content: filterContent[0]})\n                }\n                return \"\"\n            })\n            setHtmlCode(finalTemplate);\n        }\n    }, [])\n    console.log(\"LOGGES contentIdsAndTemplateIds\",contentIdsAndTemplateIds);\n    return (\n        <>\n            {\n                htmlCode ?\n                    <div dangerouslySetInnerHTML={{\n                        __html: htmlCode\n                    }}>\n                    </div> : <h1>Loading...</h1>\n            }\n        </>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\n\nconst ATTRIBUTES = {\n    contentName: \"contentName\",\n    contentIdsAndTemplateIds: \"contentIdsAndTemplateIds\"\n};\n\nclass WidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.render();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.render();\n    }\n\n    render() {\n        const contentName = this.getAttribute(ATTRIBUTES.contentName);\n        const contentIdsAndTemplateIds = this.getAttribute(ATTRIBUTES.contentIdsAndTemplateIds);\n        console.log(\"contentName ==>\", contentName, \"contentIdsAndTemplateIds ==>\", contentIdsAndTemplateIds);\n        ReactDOM.render(\n            <App contentName={contentName} contentIdsAndTemplateIds={contentIdsAndTemplateIds} />,\n            this.mountPoint\n        );\n    }\n}\n\ncustomElements.define('my-list-widget', WidgetElement);\n\nexport default WidgetElement;\n\n"],"sourceRoot":""}